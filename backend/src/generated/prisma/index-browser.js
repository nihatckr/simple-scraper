
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.13.0
 * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
 */
Prisma.prismaVersion = {
  client: "6.13.0",
  engine: "361e86d0ea4987e9f53a565309b3eed797a6bcbd"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  name: 'name',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BrandScalarFieldEnum = {
  id: 'id',
  name: 'name',
  timestamp: 'timestamp'
};

exports.Prisma.MainCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  brandId: 'brandId',
  gender: 'gender',
  level: 'level',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubCategoryScalarFieldEnum = {
  categoryId: 'categoryId',
  categoryName: 'categoryName',
  brand: 'brand',
  gender: 'gender',
  level: 'level',
  isLeaf: 'isLeaf',
  matchingId: 'matchingId',
  productCount: 'productCount',
  parentCategoryId: 'parentCategoryId',
  parentSubCategoryId: 'parentSubCategoryId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  brandName: 'brandName',
  productId: 'productId',
  name: 'name',
  price: 'price',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductColorScalarFieldEnum = {
  id: 'id',
  colorId: 'colorId',
  name: 'name',
  hexCode: 'hexCode',
  price: 'price',
  description: 'description',
  productId: 'productId'
};

exports.Prisma.ProductSizeScalarFieldEnum = {
  id: 'id',
  sizeId: 'sizeId',
  name: 'name',
  availability: 'availability',
  price: 'price',
  sku: 'sku',
  productId: 'productId',
  colorId: 'colorId',
  colorName: 'colorName'
};

exports.Prisma.ProductImageScalarFieldEnum = {
  id: 'id',
  url: 'url',
  type: 'type',
  kind: 'kind',
  order: 'order',
  productId: 'productId',
  colorId: 'colorId',
  colorName: 'colorName',
  colorIndex: 'colorIndex'
};

exports.Prisma.ProductStockScalarFieldEnum = {
  id: 'id',
  sizeId: 'sizeId',
  name: 'name',
  availability: 'availability',
  price: 'price',
  sku: 'sku',
  productId: 'productId',
  colorId: 'colorId',
  colorName: 'colorName'
};

exports.Prisma.DataSyncScalarFieldEnum = {
  id: 'id',
  syncType: 'syncType',
  status: 'status',
  itemsCount: 'itemsCount',
  errorMessage: 'errorMessage',
  timestamp: 'timestamp'
};

exports.Prisma.PriceHistoryScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  price: 'price',
  colorId: 'colorId',
  timestamp: 'timestamp'
};

exports.Prisma.StockHistoryScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  sizeId: 'sizeId',
  colorId: 'colorId',
  available: 'available',
  timestamp: 'timestamp'
};

exports.Prisma.CategoryHistoryScalarFieldEnum = {
  id: 'id',
  categoryId: 'categoryId',
  action: 'action',
  changes: 'changes',
  timestamp: 'timestamp'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  email: 'email',
  passwordHash: 'passwordHash',
  name: 'name',
  role: 'role'
};

exports.Prisma.BrandOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.MainCategoryOrderByRelevanceFieldEnum = {
  name: 'name',
  brandId: 'brandId',
  gender: 'gender'
};

exports.Prisma.SubCategoryOrderByRelevanceFieldEnum = {
  categoryName: 'categoryName',
  brand: 'brand',
  gender: 'gender'
};

exports.Prisma.ProductOrderByRelevanceFieldEnum = {
  brandName: 'brandName',
  name: 'name',
  description: 'description'
};

exports.Prisma.ProductColorOrderByRelevanceFieldEnum = {
  colorId: 'colorId',
  name: 'name',
  hexCode: 'hexCode',
  description: 'description'
};

exports.Prisma.ProductSizeOrderByRelevanceFieldEnum = {
  name: 'name',
  availability: 'availability',
  colorName: 'colorName'
};

exports.Prisma.ProductImageOrderByRelevanceFieldEnum = {
  url: 'url',
  type: 'type',
  kind: 'kind',
  colorName: 'colorName'
};

exports.Prisma.ProductStockOrderByRelevanceFieldEnum = {
  name: 'name',
  availability: 'availability',
  colorName: 'colorName'
};

exports.Prisma.DataSyncOrderByRelevanceFieldEnum = {
  syncType: 'syncType',
  status: 'status',
  errorMessage: 'errorMessage'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.CategoryHistoryOrderByRelevanceFieldEnum = {
  action: 'action'
};


exports.Prisma.ModelName = {
  User: 'User',
  Brand: 'Brand',
  MainCategory: 'MainCategory',
  SubCategory: 'SubCategory',
  Product: 'Product',
  ProductColor: 'ProductColor',
  ProductSize: 'ProductSize',
  ProductImage: 'ProductImage',
  ProductStock: 'ProductStock',
  DataSync: 'DataSync',
  PriceHistory: 'PriceHistory',
  StockHistory: 'StockHistory',
  CategoryHistory: 'CategoryHistory'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
